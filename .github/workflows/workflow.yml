name: Main workflow

on: [pull_request, push]

jobs:
  style:
    strategy:
      fail-fast: false
      matrix: { job: [os: ubuntu-latest] }

    runs-on: ${{ matrix.job.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install npm packages
        run: yarn --frozen-lockfile

      - name: Check formatting
        run: yarn fmt:check

      - name: Check lint
        run: yarn lint

      - name: Check type
        run: yarn typecheck

      - name: Ensure lib directory is up-to-date
        shell: bash
        run: |
          yarn build
          if [ "$(git status lib --porcelain | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi

  build:
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: macos-10.15, ocaml-version: 4.05.0 }
          - { os: macos-10.15, ocaml-version: 4.08.1 }
          - { os: macos-10.15, ocaml-version: "4.10.1+flambda" }
          - { os: ubuntu-18.04, ocaml-version: 4.05.0 }
          - { os: ubuntu-18.04, ocaml-version: "4.07.1+musl+flambda" }
          - { os: ubuntu-18.04, ocaml-version: 4.08.1 }
          - { os: ubuntu-18.04, ocaml-version: "4.08.1+flambda" }
          - { os: ubuntu-18.04, ocaml-version: "4.08.1+fp+flambda" }
          - { os: ubuntu-18.04, ocaml-version: "4.08.1+musl+flambda" }
          - { os: ubuntu-18.04, ocaml-version: "4.10.1+musl+flambda" }
          - { os: ubuntu-20.04, ocaml-version: 4.05.0 }
          - { os: ubuntu-20.04, ocaml-version: "4.07.1+musl+flambda" }
          - { os: ubuntu-20.04, ocaml-version: 4.08.1 }
          - { os: ubuntu-20.04, ocaml-version: "4.08.1+musl+flambda" }
          - { os: ubuntu-20.04, ocaml-version: "4.10.0+32bit" }
          - { os: ubuntu-20.04, ocaml-version: "4.10.1+fp+flambda" }
          - { os: ubuntu-20.04, ocaml-version: "4.10.1+musl+flambda" }
          - { os: ubuntu-20.04, ocaml-version: "4.10.1+musl+static+flambda" }
          - { os: windows-2019, ocaml-version: 4.05.0 }
          - { os: windows-2019, ocaml-version: 4.08.1 }
          - { os: windows-2019, ocaml-version: "4.08.1+mingw32c" }
          - { os: windows-2019, ocaml-version: "4.10.1+mingw32c" }
          - { os: windows-2019, ocaml-version: "4.10.1+mingw64c" }
          - { os: windows-2019, ocaml-version: "4.10.1+msvc32c" }
          - { os: windows-2019, ocaml-version: "4.10.1+msvc64c" }

    runs-on: ${{ matrix.job.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize workflow variables
        id: vars
        shell: bash
        run: |
          outputs() { for var in "$@" ; do echo steps.vars.outputs.${var}="${!var}" ; echo ::set-output name=${var}::${!var} ; done ; }
          MINGW_ARCH='x86_64' ; case '${{ matrix.job.ocaml-version }}' in *+mingw32*) MINGW_ARCH='i686' ;; *+mingw64*) MINGW_ARCH='x86_64' ;; esac
          MSVC_ARCH='' ; case '${{ matrix.job.ocaml-version }}' in *+msvc32*) MSVC_ARCH='x86' ;; *+msvc64*) MSVC_ARCH='x64' ;; esac
          outputs MINGW_ARCH MSVC_ARCH

      - name: Enable/config MSVC environment (if/when needed)
        uses: ilammy/msvc-dev-cmd@v1.4.1
        with:
          arch: "${{ steps.vars.outputs.MSVC_ARCH }}"
        if: contains(matrix.job.ocaml-version, '+msvc')

      - name: Use OCaml ${{ matrix.job.ocaml-version }}
        uses: ./
        with:
          ocaml-version: ${{ matrix.job.ocaml-version }}

      ## note: at this point (after OCaml installation), windows platforms will use Cygwin bash as the default for `shell: bash`
      ##   ... but Cygwin bash cannot handle shell scripts containing CRLF EOLs (which are what is generated by GHA on windows platforms)
      ##   ... so, for portable usage of bash, use `shell: bash --login --norc --noprofile -e -o pipefail -c "dos2unix '{0}' 2>/dev/null; source '{0}' ;"`

      - run: opam depext atd --install --verbose --yes
      - run: opam depext dune --install --verbose --yes
      - run: opam depext lwt --install --verbose --yes

      - run: opam depext yaml --install --verbose --yes
        ## [2020-09] non-working/unavailable for MSVC OCaml variants
        if: ${{ !contains(matrix.job.ocaml-version, '+msvc') }}

      - name: lablgtk setup and install
        ## [2020-09] non-working/unavailable for MSVC or musl OCaml variants
        ## [2020-09] non-working for 32bit variant (see [GH:garrigue/lablgtk#64](https://github.com/garrigue/lablgtk/issues/64))
        if:
          ${{ !( contains(matrix.job.ocaml-version, '+msvc') ||
          contains(matrix.job.ocaml-version, '+musl') ||
          contains(matrix.job.ocaml-version, '+32bit') ) }}
        shell:
          bash --login --norc --noprofile -e -o pipefail -c "dos2unix '{0}'
          2>/dev/null ; source '{0}' ;"
        run: |
          ocaml-env-exec () { ocaml-env >/dev/null 2>&1 && ocaml-env exec -- $* || $* ; } ## `ocaml-env exec ...` is not available for all ocaml switches
          eval "$(opam env)"
          # install extra prerequisites
          case '${{ matrix.job.os }}' in
            macos-*) brew install gtk+ ;;
            ubuntu-*) sudo apt-get install -qq -yy libexpat1-dev libgtk2.0-dev ;;
            windows-*)
              # ref: <https://www.reddit.com/r/ocaml/comments/5rt3gh/installing_lablgtk_on_windows> @@ <https://archive.is/6GSXF>
              # * `cygwin-dl` and `cygwin-install` are from the 'depext-cygwinports' opam package (<https://github.com/fdopen/depext-cygwinports>)
              cygwin-dl --wait --quiet-mode --no-admin --no-desktop --packages mingw64-${{ steps.vars.outputs.MINGW_ARCH }}-glib2.0,mingw64-${{ steps.vars.outputs.MINGW_ARCH }}-gtk2.0,mingw64-${{ steps.vars.outputs.MINGW_ARCH }}-pango1.0,libgtk2.0_0,libgtk2.0_devel
              ;;
          esac
          # install 'lablgtk' package
          ocaml-env-exec opam depext --install --verbose --yes lablgtk
