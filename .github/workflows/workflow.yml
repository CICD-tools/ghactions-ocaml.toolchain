name: Main workflow

on: [pull_request, push]

jobs:
  style:
    strategy:
      fail-fast: false
      matrix: { job: [os: ubuntu-latest] }

    runs-on: ${{ matrix.job.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install npm packages
        run: yarn --frozen-lockfile

      - name: Check formatting
        run: yarn fmt:check

      - name: Ensure lib directory is up-to-date
        shell: bash
        run: |
          yarn build
          if [ "$(git status --porcelain | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi

  build:
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: macos-10.15, ocaml-version: 4.05.0 }
          - { os: macos-10.15, ocaml-version: 4.08.1 }
          - { os: macos-10.15, ocaml-version: "4.10.1+flambda" }
          - { os: ubuntu-18.04, ocaml-version: 4.05.0 }
          - { os: ubuntu-18.04, ocaml-version: "4.07.1+musl+flambda" }
          - { os: ubuntu-18.04, ocaml-version: 4.08.1 }
          - { os: ubuntu-18.04, ocaml-version: "4.08.1+flambda" }
          - { os: ubuntu-18.04, ocaml-version: "4.08.1+fp+flambda" }
          - { os: ubuntu-18.04, ocaml-version: "4.08.1+musl+flambda" }
          - { os: ubuntu-18.04, ocaml-version: "4.10.1+musl+flambda" }
          - { os: ubuntu-20.04, ocaml-version: 4.05.0 }
          - { os: ubuntu-20.04, ocaml-version: "4.07.1+musl+flambda" }
          - { os: ubuntu-20.04, ocaml-version: 4.08.1 }
          - { os: ubuntu-20.04, ocaml-version: "4.08.1+musl+flambda" }
          - { os: ubuntu-20.04, ocaml-version: "4.10.1+fp+flambda" }
          - { os: ubuntu-20.04, ocaml-version: "4.10.1+musl+flambda" }
          - { os: ubuntu-20.04, ocaml-version: "4.10.1+musl+static+flambda" }
          - { os: windows-2019, ocaml-version: 4.05.0 }
          - { os: windows-2019, ocaml-version: 4.08.1 }
          - { os: windows-2019, ocaml-version: "4.08.1+mingw32c" }
          - { os: windows-2019, ocaml-version: "4.10.1+mingw32c" }
          - { os: windows-2019, ocaml-version: "4.10.1+mingw64c" }
          - { os: windows-2019, ocaml-version: "4.10.1+msvc32c" }
          - { os: windows-2019, ocaml-version: "4.10.1+msvc64c" }

    runs-on: ${{ matrix.job.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize workflow variables
        id: vars
        shell: bash
        run: |
          MSVC_ARCH=''; case '${{ matrix.job.ocaml-version }}' in *+msvc32*) MSVC_ARCH='x86' ;; *+msvc64*) MSVC_ARCH='x64' ;; esac
          echo ::set-output name=MSVC_ARCH::${MSVC_ARCH}

      - name: Use OCaml ${{ matrix.job.ocaml-version }}
        uses: ./
        with:
          ocaml-version: ${{ matrix.job.ocaml-version }}

      - name: Enable/config MSVC environment (if/when needed)
        uses: ilammy/msvc-dev-cmd@v1.3.0
        with:
          arch: "${{ steps.vars.outputs.MSVC_ARCH }}"
        if: contains(matrix.job.ocaml-version, '+msvc')

      - run: opam depext atd --install --verbose --yes
      - run: opam depext yaml --install --verbose --yes
        if: ${{ !contains(matrix.job.ocaml-version, '+msvc') }}
